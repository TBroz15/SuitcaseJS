# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Publish to NPM

on:
  push:
    branches: ["main"]
  pull_request:
    branches: "*"

jobs:
  publish:
    runs-on: ubuntu-latest
    if: |
      COMMIT_PATTERN='^(feat|fix|docs|perf|build|ci)-'
      if [ "${{ github.event_name }}" == "push" ]; then
        git log -1 --pretty="%s" | grep -qE "$COMMIT_PATTERN"
      elif [ "${{ github.event_name }}" == "pull_request" ]; then
        echo "${{ github.event.pull_request.title }}" | grep -qE "$COMMIT_PATTERN"
      fi
      test $? -eq 0
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
      - run: npm install -g pnpm
      - name: Determine pnpm store path
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
            ${{ runner.os }}-pnpm-store-
            ${{ runner.os }}-pnpm-
      - name: PNPM Install
        run: pnpm install
      - name: Typescript Checking
        run: tsc
      - name: ESBuild
        run: |
          node build > esbuild.log
          exit_code=$?
          if [ $exit_code -ne 0 ]; then
            echo "ESbuild errors found!"
            cat esbuild.log
            exit $exit_code
          fi
      - run: npm run semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
